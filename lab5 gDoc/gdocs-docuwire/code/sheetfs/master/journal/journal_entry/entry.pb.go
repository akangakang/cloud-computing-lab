// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: entry.proto

package journal_entry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	State_PRESENT State = 0
	State_ABSENT  State = 1
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "PRESENT",
		1: "ABSENT",
	}
	State_value = map[string]int32{
		"PRESENT": 0,
		"ABSENT":  1,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_entry_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_entry_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_entry_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_entry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_entry_proto_rawDescGZIP(), []int{0}
}

type CellEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetState State  `protobuf:"varint,1,opt,name=target_state,json=targetState,proto3,enum=common_journal.State" json:"target_state,omitempty"`
	CellId      int64  `protobuf:"varint,2,opt,name=cell_id,json=cellId,proto3" json:"cell_id,omitempty"`
	Offset      uint64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Size        uint64 `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	ChunkId     uint64 `protobuf:"varint,5,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	SheetName   string `protobuf:"bytes,6,opt,name=sheet_name,json=sheetName,proto3" json:"sheet_name,omitempty"`
}

func (x *CellEntry) Reset() {
	*x = CellEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellEntry) ProtoMessage() {}

func (x *CellEntry) ProtoReflect() protoreflect.Message {
	mi := &file_entry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellEntry.ProtoReflect.Descriptor instead.
func (*CellEntry) Descriptor() ([]byte, []int) {
	return file_entry_proto_rawDescGZIP(), []int{1}
}

func (x *CellEntry) GetTargetState() State {
	if x != nil {
		return x.TargetState
	}
	return State_PRESENT
}

func (x *CellEntry) GetCellId() int64 {
	if x != nil {
		return x.CellId
	}
	return 0
}

func (x *CellEntry) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CellEntry) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CellEntry) GetChunkId() uint64 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *CellEntry) GetSheetName() string {
	if x != nil {
		return x.SheetName
	}
	return ""
}

type ChunkEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetState State  `protobuf:"varint,1,opt,name=target_state,json=targetState,proto3,enum=common_journal.State" json:"target_state,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Version     uint64 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Datanode    string `protobuf:"bytes,4,opt,name=datanode,proto3" json:"datanode,omitempty"`
}

func (x *ChunkEntry) Reset() {
	*x = ChunkEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChunkEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkEntry) ProtoMessage() {}

func (x *ChunkEntry) ProtoReflect() protoreflect.Message {
	mi := &file_entry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkEntry.ProtoReflect.Descriptor instead.
func (*ChunkEntry) Descriptor() ([]byte, []int) {
	return file_entry_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkEntry) GetTargetState() State {
	if x != nil {
		return x.TargetState
	}
	return State_PRESENT
}

func (x *ChunkEntry) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChunkEntry) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ChunkEntry) GetDatanode() string {
	if x != nil {
		return x.Datanode
	}
	return ""
}

type FileMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetState       State  `protobuf:"varint,1,opt,name=target_state,json=targetState,proto3,enum=common_journal.State" json:"target_state,omitempty"`
	Filename          string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	CellsTableName    string `protobuf:"bytes,3,opt,name=cells_table_name,json=cellsTableName,proto3" json:"cells_table_name,omitempty"`
	Recycled          bool   `protobuf:"varint,4,opt,name=recycled,proto3" json:"recycled,omitempty"`
	RecycledTimestamp int64  `protobuf:"varint,5,opt,name=recycled_timestamp,json=recycledTimestamp,proto3" json:"recycled_timestamp,omitempty"`
}

func (x *FileMapEntry) Reset() {
	*x = FileMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMapEntry) ProtoMessage() {}

func (x *FileMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_entry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMapEntry.ProtoReflect.Descriptor instead.
func (*FileMapEntry) Descriptor() ([]byte, []int) {
	return file_entry_proto_rawDescGZIP(), []int{3}
}

func (x *FileMapEntry) GetTargetState() State {
	if x != nil {
		return x.TargetState
	}
	return State_PRESENT
}

func (x *FileMapEntry) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileMapEntry) GetCellsTableName() string {
	if x != nil {
		return x.CellsTableName
	}
	return ""
}

func (x *FileMapEntry) GetRecycled() bool {
	if x != nil {
		return x.Recycled
	}
	return false
}

func (x *FileMapEntry) GetRecycledTimestamp() int64 {
	if x != nil {
		return x.RecycledTimestamp
	}
	return 0
}

type MasterEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to XCell:
	//	*MasterEntry_E1
	//	*MasterEntry_Cell
	XCell isMasterEntry_XCell `protobuf_oneof:"_Cell"`
	// Types that are assignable to XChunk:
	//	*MasterEntry_E2
	//	*MasterEntry_Chunk
	XChunk isMasterEntry_XChunk `protobuf_oneof:"_Chunk"`
	// Types that are assignable to XFileMap:
	//	*MasterEntry_E3
	//	*MasterEntry_MapEntry
	XFileMap isMasterEntry_XFileMap `protobuf_oneof:"_FileMap"`
}

func (x *MasterEntry) Reset() {
	*x = MasterEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterEntry) ProtoMessage() {}

func (x *MasterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_entry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterEntry.ProtoReflect.Descriptor instead.
func (*MasterEntry) Descriptor() ([]byte, []int) {
	return file_entry_proto_rawDescGZIP(), []int{4}
}

func (m *MasterEntry) GetXCell() isMasterEntry_XCell {
	if m != nil {
		return m.XCell
	}
	return nil
}

func (x *MasterEntry) GetE1() *Empty {
	if x, ok := x.GetXCell().(*MasterEntry_E1); ok {
		return x.E1
	}
	return nil
}

func (x *MasterEntry) GetCell() *CellEntry {
	if x, ok := x.GetXCell().(*MasterEntry_Cell); ok {
		return x.Cell
	}
	return nil
}

func (m *MasterEntry) GetXChunk() isMasterEntry_XChunk {
	if m != nil {
		return m.XChunk
	}
	return nil
}

func (x *MasterEntry) GetE2() *Empty {
	if x, ok := x.GetXChunk().(*MasterEntry_E2); ok {
		return x.E2
	}
	return nil
}

func (x *MasterEntry) GetChunk() *ChunkEntry {
	if x, ok := x.GetXChunk().(*MasterEntry_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (m *MasterEntry) GetXFileMap() isMasterEntry_XFileMap {
	if m != nil {
		return m.XFileMap
	}
	return nil
}

func (x *MasterEntry) GetE3() *Empty {
	if x, ok := x.GetXFileMap().(*MasterEntry_E3); ok {
		return x.E3
	}
	return nil
}

func (x *MasterEntry) GetMapEntry() *FileMapEntry {
	if x, ok := x.GetXFileMap().(*MasterEntry_MapEntry); ok {
		return x.MapEntry
	}
	return nil
}

type isMasterEntry_XCell interface {
	isMasterEntry_XCell()
}

type MasterEntry_E1 struct {
	E1 *Empty `protobuf:"bytes,1,opt,name=e1,proto3,oneof"`
}

type MasterEntry_Cell struct {
	Cell *CellEntry `protobuf:"bytes,2,opt,name=cell,proto3,oneof"`
}

func (*MasterEntry_E1) isMasterEntry_XCell() {}

func (*MasterEntry_Cell) isMasterEntry_XCell() {}

type isMasterEntry_XChunk interface {
	isMasterEntry_XChunk()
}

type MasterEntry_E2 struct {
	E2 *Empty `protobuf:"bytes,3,opt,name=e2,proto3,oneof"`
}

type MasterEntry_Chunk struct {
	Chunk *ChunkEntry `protobuf:"bytes,4,opt,name=chunk,proto3,oneof"`
}

func (*MasterEntry_E2) isMasterEntry_XChunk() {}

func (*MasterEntry_Chunk) isMasterEntry_XChunk() {}

type isMasterEntry_XFileMap interface {
	isMasterEntry_XFileMap()
}

type MasterEntry_E3 struct {
	E3 *Empty `protobuf:"bytes,5,opt,name=e3,proto3,oneof"`
}

type MasterEntry_MapEntry struct {
	MapEntry *FileMapEntry `protobuf:"bytes,6,opt,name=map_entry,json=mapEntry,proto3,oneof"`
}

func (*MasterEntry_E3) isMasterEntry_XFileMap() {}

func (*MasterEntry_MapEntry) isMasterEntry_XFileMap() {}

var File_entry_proto protoreflect.FileDescriptor

var file_entry_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0xc4, 0x01, 0x0a, 0x09, 0x43, 0x65, 0x6c, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x01,
	0x0a, 0x0a, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x0c,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0xd9, 0x01, 0x0a,
	0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x38, 0x0a,
	0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x65, 0x6c, 0x6c, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xc9, 0x02, 0x0a, 0x0b, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x02, 0x65, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x02, 0x65,
	0x31, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x04, 0x63, 0x65,
	0x6c, 0x6c, 0x12, 0x27, 0x0a, 0x02, 0x65, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x01, 0x52, 0x02, 0x65, 0x32, 0x12, 0x32, 0x0a, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x01, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12,
	0x27, 0x0a, 0x02, 0x65, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x48, 0x02, 0x52, 0x02, 0x65, 0x33, 0x12, 0x3b, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x43, 0x65, 0x6c, 0x6c, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x61, 0x70, 0x2a, 0x20, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x42,
	0x53, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6f, 0x75, 0x72, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2f,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x66, 0x73, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x6a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x3b, 0x6a, 0x6f, 0x75,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_entry_proto_rawDescOnce sync.Once
	file_entry_proto_rawDescData = file_entry_proto_rawDesc
)

func file_entry_proto_rawDescGZIP() []byte {
	file_entry_proto_rawDescOnce.Do(func() {
		file_entry_proto_rawDescData = protoimpl.X.CompressGZIP(file_entry_proto_rawDescData)
	})
	return file_entry_proto_rawDescData
}

var file_entry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_entry_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_entry_proto_goTypes = []interface{}{
	(State)(0),           // 0: common_journal.State
	(*Empty)(nil),        // 1: common_journal.Empty
	(*CellEntry)(nil),    // 2: common_journal.CellEntry
	(*ChunkEntry)(nil),   // 3: common_journal.ChunkEntry
	(*FileMapEntry)(nil), // 4: common_journal.FileMapEntry
	(*MasterEntry)(nil),  // 5: common_journal.MasterEntry
}
var file_entry_proto_depIdxs = []int32{
	0, // 0: common_journal.CellEntry.target_state:type_name -> common_journal.State
	0, // 1: common_journal.ChunkEntry.target_state:type_name -> common_journal.State
	0, // 2: common_journal.FileMapEntry.target_state:type_name -> common_journal.State
	1, // 3: common_journal.MasterEntry.e1:type_name -> common_journal.Empty
	2, // 4: common_journal.MasterEntry.cell:type_name -> common_journal.CellEntry
	1, // 5: common_journal.MasterEntry.e2:type_name -> common_journal.Empty
	3, // 6: common_journal.MasterEntry.chunk:type_name -> common_journal.ChunkEntry
	1, // 7: common_journal.MasterEntry.e3:type_name -> common_journal.Empty
	4, // 8: common_journal.MasterEntry.map_entry:type_name -> common_journal.FileMapEntry
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_entry_proto_init() }
func file_entry_proto_init() {
	if File_entry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChunkEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_entry_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*MasterEntry_E1)(nil),
		(*MasterEntry_Cell)(nil),
		(*MasterEntry_E2)(nil),
		(*MasterEntry_Chunk)(nil),
		(*MasterEntry_E3)(nil),
		(*MasterEntry_MapEntry)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entry_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entry_proto_goTypes,
		DependencyIndexes: file_entry_proto_depIdxs,
		EnumInfos:         file_entry_proto_enumTypes,
		MessageInfos:      file_entry_proto_msgTypes,
	}.Build()
	File_entry_proto = out.File
	file_entry_proto_rawDesc = nil
	file_entry_proto_goTypes = nil
	file_entry_proto_depIdxs = nil
}
